link ---- https://www.codingninjas.com/codestudio/problems/number-of-comments-per-post_2117115?topList=top-100-sql-problems&leftPanelTab=0

Problem Statement

Table: Submissions

+---------------+----------+
| Column Name   | Type     |
+---------------+----------+
| sub_id        | int      |
| parent_id     | int      |
+---------------+----------+
There is no primary key for this table, it may have duplicate rows.
Each row can be a post or comment on the post.
parent_id is null for posts.
parent_id for comments is sub_id for another post in the table.


Write an SQL query to find number of comments per each post.

Result table should contain post_id and its corresponding number_of_comments, and must be sorted by post_id in ascending order.

Submissions may contain duplicate comments. You should count the number of unique comments per post.

Submissions may contain duplicate posts. You should treat them as one post.

The query result format is in the following example:

Submissions table:
+---------+------------+
| sub_id  | parent_id  |
+---------+------------+
| 1       | Null       |
| 2       | Null       |
| 1       | Null       |
| 12      | Null       |
| 3       | 1          |
| 5       | 2          |
| 3       | 1          |
| 4       | 1          |
| 9       | 1          |
| 10      | 2          |
| 6       | 7          |
+---------+------------+

 Result table:
+---------+--------------------+
| post_id | number_of_comments |
+---------+--------------------+
| 1       | 3                  |
| 2       | 2                  |
| 12      | 0                  |
+---------+--------------------+

The post with id 1 has three comments in the table with id 3, 4 and 9. The comment with id 3 is repeated in the table, we counted it only once.
The post with id 2 has two comments in the table with id 5 and 10.
The post with id 12 has no comments in the table.
The comment with id 6 is a comment on a deleted post with id 7 so we ignored it.

------------------- solution 1 ------------------------


with newt as (select distinct sub_id from submissions 
where parent_id is null)

select t1.sub_id post_id, count(distinct t2.sub_id) number_of_comments from newt t1
left join submissions t2
on t1.sub_id = t2.parent_id
group by 1



----------------- solution 2 ------------------------------


select distinct s1.sub_id as post_id ,count(distinct s2.sub_id) as number_of_comments from Submissions s1
left join Submissions s2 on s1.sub_id =s2.parent_id
where s1.parent_id is null or s1.parent_id=s2.parent_id
group by s1.sub_id;



